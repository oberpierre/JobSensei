load("@aspect_bazel_lib//lib:transitions.bzl", "platform_transition_filegroup")
load("@aspect_bazel_lib//lib:directory_path.bzl", "directory_path")
load("@aspect_bazel_lib//lib:copy_file.bzl", "copy_file")
load("@rules_pkg//pkg:tar.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("//web:defs.bzl", "ng_application")

package(default_visibility = ["//visibility:public"])

# An asset from within an npm package
directory_path(
    name = "normalize-css-dir-path",
    directory = "//web:node_modules/normalize.css/dir",
    path = "normalize.css",
)

copy_file(
    name = "normalize-css",
    src = ":normalize-css-dir-path",
    out = "normalize.css",
)

directory_path(
    name = "nebular-theme-path",
    directory = "//web:node_modules/@nebular/theme/dir",
    path = "styles/prebuilt/dark.css",
)

directory_path(
    name = "nebular-default-theme-path",
    directory = "//web:node_modules/@nebular/theme/dir",
    path = "styles/prebuilt/default.css",
)

copy_file(
    name = "nebular-theme",
    src = ":nebular-theme-path",
    out = "dark.css",
)

copy_file(
    name = "nebular-default-theme",
    src = ":nebular-default-theme-path",
    out = "default.css",
)

# The Angular demo application
ng_application(
    name = "app",
    deps = [
        "//web:node_modules/@angular/animations",
        "//web:node_modules/@angular/cdk",
        "//web:node_modules/@angular/forms",
        "//web:node_modules/@nebular/theme",
        "//web:node_modules/@nebular/eva-icons",
        "//web:node_modules/eva-icons",
        "//web:node_modules/normalize.css",
        "//web:node_modules/@apollo/client",
        "//web:node_modules/apollo-angular",
        "//web:node_modules/graphql",
    ],
    html_assets = [
        ":normalize.css",
        ":dark.css",
        ":default.css",
        "styles.css",
        "favicon.ico"
    ]
)

pkg_tar(
    name = "image_layer",
    srcs = [":prod"],
    package_dir = "/usr/share/nginx/html",
    strip_prefix = "prod",
)

oci_image(
    name = "image",
    base = "@nginx",
    workdir = "/usr/share/nginx/html",
    exposed_ports = ["80"],
    tars = [
        ":image_layer"
    ]
)

platform(
    name = "aarch64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:aarch64",
    ],
)

platform(
    name = "x86_64_linux",
    constraint_values = [
        "@platforms//os:linux",
        "@platforms//cpu:x86_64",
    ],
)

platform_transition_filegroup(
    name = "platform_image",
    srcs = [":image"],
    target_platform = select({
        "@platforms//cpu:arm64": ":aarch64_linux",
        "@platforms//cpu:x86_64": ":x86_64_linux",
    }),
)

oci_tarball(
    name = "tarball",
    image = ":platform_image",
    repo_tags = ["jobsensei_web:latest"],
)